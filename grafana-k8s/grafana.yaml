apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "2"
  creationTimestamp: null
  generation: 1
  labels:
    app: grafana
  name: grafana
  selfLink: /apis/apps/v1/namespaces/default/deployments/grafana
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: grafana
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: grafana
    spec:
      containers:
      - envFrom:
        - secretRef:
            name: grafana-creds
        image: docker.io/grafana/grafana:latest
        imagePullPolicy: IfNotPresent
        name: grafana
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
          - name: GF_INSTALL_PLUGINS
            value: "grafana-kubernetes-app"
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---

apiVersion: v1
kind: Secret
metadata:
  creationTimestamp: null
  name: grafana-creds
  selfLink: /api/v1/namespaces/default/secrets/grafana-creds
type: Opaque
data:
  #username => admin  password => graphsRcool
  GF_SECURITY_ADMIN_PASSWORD: Z3JhcGhzUmNvb2w= 
  GF_SECURITY_ADMIN_USER: YWRtaW4=

---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: grafana
  name: grafana
  selfLink: /api/v1/namespaces/default/services/grafana
spec:
  externalTrafficPolicy: Cluster
  ports:
  - nodePort: 30669
    port: 80
    protocol: TCP
    targetPort: 3000
  selector:
    app: grafana
  sessionAffinity: None
  type: LoadBalancer

